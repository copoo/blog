Memcached讲解记录

分布式内存，kv数据库

一致性hash, 是否存在服务器分布不均衡的情况？

内存管理 slab->page->chunck
为效率，成块的申请内存，自己管理

每个slab中chunck的大小是一样的，不同slab中的chunck的可能不一样，方便存放长短不一的数据
内存申请的单位是page
存在内存的浪费，因为chunck可能是不满的，系统配置上尽可能减少这种浪费

全局值查找 使用hash表（hash桶） 链表，开地址法
同时，slab中维护一个双向链表，LRU，记录最近最常使用的块，在head端
即，在访问对应的chunk时，总是修改此链表，把对应节点移动到head端

内存不足时，通过遍历slab的尾端，踢出数据，检查是否有过期的，优先踢出。
此过程是懒惰方式，仅在有数据访问时才触发

支持cas操作

不适用k,v过大的场景，v值一般在k或者几十字节
